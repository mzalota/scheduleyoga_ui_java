<!DOCTYPE urlrewrite PUBLIC 
		"-//tuckey.org//DTD UrlRewrite 3.2//EN"
        "http://www.tuckey.org/res/dtds/urlrewrite3.2.dtd">
        
<!--
    Configuration file for UrlRewriteFilter
    http://tuckey.org/urlrewrite/
-->
<urlrewrite>

    <rule>
        <note>
                If www was not specified in the domain name, redirect to it.
        </note>
        <condition type="server-name">^scheduleyoga.com$</condition>
        <from>^/(.*)$</from>
        <to type="permanent-redirect" last="true"> http://www.scheduleyoga.com/$1 </to>
    </rule>


    <rule>
        <note>
            The rule means that requests to /test/status/ will be redirected to /rewrite-status
            the url will be rewritten.
        </note>
        <from>/test/status/</from>
        <to type="redirect">%{context-path}/rewrite-status</to>
    </rule>
    
    <rule>
        <note>
            Exclude everything in "css" directory
        </note>
        <from>/css/(.*)</from>
        <to last="true">/css/$1</to>
    </rule>

    <rule>
        <note>
            Exclude everything in "images" directory
        </note>
        <from>/images/(.*)</from>
        <to last="true">/images/$1</to>
    </rule>
    
    <rule>
        <note>
            Exclude everything in "yoga" directory
        </note>
        <from>/yoga/(.*)</from>
        <to last="true">/yoga/$1</to>
    </rule>
    
    <rule>
        <note>
            Exclude everything in "yoga-styles" directory
        </note>
        <from>/yoga-styles/(.*)</from>
        <to last="true">/yoga-styles/$1</to>
    </rule>

    <rule>
        <note>
            Exclude everything in "yoga-props" directory
        </note>
        <from>/yoga-props/(.*)</from>
        <to last="true">/yoga-props/$1</to>
    </rule>
    
    <rule>
        <note>
           	Date page for Teacher
        </note>
        <from>/teachers/(.*)/(.*)/(20[\d]{2}-[0,1][\d]-[0,1,2,3][\d]).html</from>
        <to>/TeacherServlet?state=$1&amp;teacher=$2&amp;date=$3</to>
    </rule>    
    
    <rule>
        <note>
            Teacher's home page
        </note>
        <from>/teachers/(.*)/(.*)/</from>
        <to>/TeacherServlet?state=$1&amp;teacher=$2</to>
    </rule>
    
     <rule>
        <note>
            List of teachers in a state
        </note>
        <from>/teachers/(.*)/</from>
        <to>/TeachersListServlet?state=$1</to>
    </rule>
    
    <rule>
        <note>
           	Date page for studios
        </note>
        <from>/studios/(.*)/(.*)/(20[\d]{2}-[0,1][\d]-[0,1,2,3][\d]).html</from>
        <to>/StudioServlet?state=$1&amp;studio=$2&amp;date=$3</to>
    </rule>    
    
<!--     <rule> -->
<!--         <note> -->
<!--            	Studio's pages -->
<!--         </note> -->
<!--         <from>/(.*)/(.*)/(20[\d]{2}-[0,1][\d]-[0,1,2,3][\d]).html</from> -->
<!--         <to>/StudioTemplate?state=$1&amp;studio=$2&amp;date=$3</to> -->
<!--     </rule> -->
  
    <rule>
        <note>
            Studio's home page
        </note>
        <from>/studios/(.*)/(.*)/</from>
        <to>/StudioServlet?state=$1&amp;studio=$2</to>
    </rule>

  	<rule>
        <note>
            List of studios in a state
        </note>
        <from>/studios/(.*)/</from>
        <to>/StudiosListServlet?state=$1</to>
    </rule>


    <outbound-rule>
        <note>
            The outbound-rule specifies that when response.encodeURL is called (if you are using JSTL c:url)
            the url /rewrite-status will be rewritten to /test/status/.

            The above rule and this outbound-rule means that end users should never see the
            url /rewrite-status only /test/status/ both in thier location bar and in hyperlinks
            in your pages.
        </note>
        <from>/rewrite-status</from>
        <to>/test/status/</to>
    </outbound-rule>


    <!--

    INSTALLATION

        in your web.xml add...

        <filter>
            <filter-name>UrlRewriteFilter</filter-name>
            <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
            <init-param>
                <param-name>logLevel</param-name>
                <param-value>WARN</param-value>
            </init-param>
        </filter>
        <filter-mapping>
            <filter-name>UrlRewriteFilter</filter-name>
            <url-pattern>/*</url-pattern>
        </filter-mapping>

     EXAMPLES

     Redirect one url
        <rule>
            <from>/some/old/page.html</from>
            <to type="redirect">/very/new/page.html</to>
        </rule>

    <rule>
        <note>
            The rule means that requests to /test/status/ will be redirected to /rewrite-status
            the url will be rewritten.
        </note>
        <from>/new-york/*/</from>
        <to>%{context-path}/StudioTemplate/</to>
    </rule>

    Redirect a directory
        <rule>
            <from>/some/olddir/(.*)</from>
            <to type="redirect">/very/newdir/$1</to>
        </rule>

    Clean a url
        <rule>
            <from>/products/([0-9]+)</from>
            <to>/products/index.jsp?product_id=$1</to>
        </rule>
    eg, /products/1234 will be passed on to /products/index.jsp?product_id=1234 without the user noticing.

    Browser detection
        <rule>
            <condition name="user-agent">Mozilla/[1-4]</condition>
            <from>/some/page.html</from>
            <to>/some/page-for-old-browsers.html</to>
        </rule>
    eg, will pass the request for /some/page.html on to /some/page-for-old-browsers.html only for older
    browsers whose user agent srtings match Mozilla/1, Mozilla/2, Mozilla/3 or Mozilla/4.

    Centralised browser detection
        <rule>
            <condition name="user-agent">Mozilla/[1-4]</condition>
            <set type="request" name="browser">moz</set>
        </rule>
    eg, all requests will be checked against the condition and if matched
    request.setAttribute("browser", "moz") will be called.

    -->


</urlrewrite>

